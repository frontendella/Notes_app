{"ast":null,"code":"var _jsxFileName = \"/Users/ellaryukhina/Desktop/notes/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    // Put the most recently-modified note at the top\n    setNotes(oldNotes => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({\n            ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h9rVnagE36yNkFkROwCMD8XJBck=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","note","findCurrentNote","find"],"sources":["/Users/ellaryukhina/Desktop/notes/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport { nanoid } from \"nanoid\"\nimport \"./style.css\"\n\nexport default function App() {\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  )\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  )\n\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes))\n  }, [notes])\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    }\n    setNotes(prevNotes => [newNote, ...prevNotes])\n    setCurrentNoteId(newNote.id)\n  }\n\n  function updateNote(text) {\n    // Put the most recently-modified note at the top\n    setNotes(oldNotes => {\n      const newArray = []\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i]\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote, body: text })\n        } else {\n          newArray.push(oldNote)\n        }\n      }\n      return newArray\n    })\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation()\n    setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId))\n\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId\n    }) || notes[0]\n  }\n\n  return (\n    <main>\n      {\n        notes.length > 0\n          ?\n          <Split\n            sizes={[30, 70]}\n            direction=\"horizontal\"\n            className=\"split\"\n          >\n            <Sidebar\n              notes={notes}\n              currentNote={findCurrentNote()}\n              setCurrentNoteId={setCurrentNoteId}\n              newNote={createNewNote}\n              deleteNote={deleteNote}\n            />\n            {\n              currentNoteId &&\n              notes.length > 0 &&\n              <Editor\n                currentNote={findCurrentNote()}\n                updateNote={updateNote}\n              />\n            }\n          </Split>\n          :\n          <div className=\"no-notes\">\n            <h1>You have no notes</h1>\n            <button\n              className=\"first-note\"\n              onClick={createNewNote}\n            >\n              Create one now\n            </button>\n          </div>\n\n      }\n    </main>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}